{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/app/DynamicFavicon.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\n\nconst DynamicFavicon = () => {\n  useEffect(() => {\n    const favicon = document.getElementById('favicon') as HTMLLinkElement;\n    const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Function to update favicon based on theme\n    const setFavicon = () => {\n      if (darkModeMediaQuery.matches) {\n        favicon.href = '/assets/dark-theme-icon/favicon.ico'; // Dark mode favicon\n      } else {\n        favicon.href = '/assets/light-theme-icon/favicon.ico'; // Light mode favicon\n      }\n    };\n\n    // Set initial favicon based on current theme\n    setFavicon();\n\n    // Listen for theme changes\n    darkModeMediaQuery.addEventListener('change', setFavicon);\n\n    // Cleanup listener on component unmount\n    return () => {\n      darkModeMediaQuery.removeEventListener('change', setFavicon);\n    };\n  }, []);\n\n  return null; // This component doesn't need to render anything\n};\n\nexport default DynamicFavicon;\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAIA,MAAM,iBAAiB;;IACrB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM,UAAU,SAAS,cAAc,CAAC;YACxC,MAAM,qBAAqB,OAAO,UAAU,CAAC;YAE7C,4CAA4C;YAC5C,MAAM;uDAAa;oBACjB,IAAI,mBAAmB,OAAO,EAAE;wBAC9B,QAAQ,IAAI,GAAG,uCAAuC,oBAAoB;oBAC5E,OAAO;wBACL,QAAQ,IAAI,GAAG,wCAAwC,qBAAqB;oBAC9E;gBACF;;YAEA,6CAA6C;YAC7C;YAEA,2BAA2B;YAC3B,mBAAmB,gBAAgB,CAAC,UAAU;YAE9C,wCAAwC;YACxC;4CAAO;oBACL,mBAAmB,mBAAmB,CAAC,UAAU;gBACnD;;QACF;mCAAG,EAAE;IAEL,OAAO,MAAM,iDAAiD;AAChE;GA3BM;KAAA;uCA6BS","debugId":null}}]
}