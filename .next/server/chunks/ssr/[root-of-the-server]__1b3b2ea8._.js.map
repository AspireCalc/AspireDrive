{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/lib/actions/file.actions.ts"],"sourcesContent":["\"use server\";\nimport { createAdminClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n}\n\nexport const uploadFile = async ({ file, ownerId, accountId, path }: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n        const bucketFile = await storage.createFile(appwriteConfig.bucketId, ID.unique(), inputFile);\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId,\n            users: [],\n            bucketFileId: bucketFile.$id\n        }\n        const newFile = await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            ID.unique(),\n            fileDocument,\n        ).catch(async (error: unknown) => {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFile.$id);\n            handleError(error, \"Failed to create an file document\")\n        });\n\n        revalidatePath(path);\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file\");\n    }\n}\n\nconst createQueries = (currentUser: Models.Document, types: string[]) => {\n    const queries = [\n        Query.or([\n            Query.equal('owner', [currentUser.$id]),\n            Query.contains('users', [currentUser.email])\n        ])\n    ];\n\n    if (types.length > 0) queries.push(Query.equal('type', types));\n    return queries;\n}\n\nexport const getFiles = async ({ types = [] }: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n        if (!currentUser) {\n            throw new Error(\"User not found\");\n        }\n\n        const queries = createQueries(currentUser, types);\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            queries,\n        );\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n}\n\nexport const renameFile = async ({ fileId, name, extension, path }: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const newName = `${name}.${extension}`;\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename the file\");\n    }\n}\n\nexport const updatedFileUsers = async ({ fileId, emails, path }: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                users: emails\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to update the file users\");\n    }\n}\n\nexport const deleteFile = async ({ fileId, bucketFileId, path }: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify(deletedFile);\n    } catch (error) {\n        handleError(error, \"Failed to delete the file\");\n    }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/.next-internal/server/app/%28root%29/%5Btype%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '001e2dfa10d3d3b2ca9ad8ad1b2bbb0eb05530746a'} from 'ACTIONS_MODULE0'\nexport {createAccount as '7f4205ea856f09245687e1f7d1a5143084ee607872'} from 'ACTIONS_MODULE1'\nexport {getCurrentUser as '7f44fedf725f120aee40a56c2cc4c346d2ea9049a4'} from 'ACTIONS_MODULE1'\nexport {signOutUser as '7f804c3073ffaefc869e312bc0c4cc3144bbc2fdc6'} from 'ACTIONS_MODULE1'\nexport {verifySecret as '7f8415e7784befb7c1678eb0951049579188b44ce6'} from 'ACTIONS_MODULE1'\nexport {signInUser as '7f9f32803a3392a9d4ae9060aef7f5d99b3bac0f17'} from 'ACTIONS_MODULE1'\nexport {sendEmailOTP as '7fa0accb28402a967e922c077dc509347950f3f70b'} from 'ACTIONS_MODULE1'\nexport {createAdminClient as '7f3fcab81e05b108c6f2e065297f5251c297c4265e'} from 'ACTIONS_MODULE2'\nexport {creatSessionClient as '7fa690d3837137463c3153def754198bd4c9636552'} from 'ACTIONS_MODULE2'\nexport {uploadFile as '7f27fa36a148831f3f0229dc023315967776beaac5'} from 'ACTIONS_MODULE3'\nexport {getFiles as '7f13042a3c947b067b422bdd05a9e5cf0f7c288eb6'} from 'ACTIONS_MODULE3'\nexport {updatedFileUsers as '7f8ef21cd3a0232a770021246c3d05b4cd228c3115'} from 'ACTIONS_MODULE3'\nexport {deleteFile as '7fe4dccc9897f74b66268a2bad0e663fd2568ec7b4'} from 'ACTIONS_MODULE3'\nexport {renameFile as '7fec5f51c45b4368764e36dd6830e851df864e8e29'} from 'ACTIONS_MODULE3'\n"],"names":[],"mappings":";AAAA;AACA;AAMA;AAEA","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/Thumbnail.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Thumbnail.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Thumbnail.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/Thumbnail.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Thumbnail.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Thumbnail.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/ActionDropdown.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ActionDropdown.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ActionDropdown.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/ActionDropdown.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/ActionDropdown.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ActionDropdown.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/Card.tsx"],"sourcesContent":["import Link from 'next/link'\nimport { Models } from 'node-appwrite'\nimport React from 'react'\nimport Thumbnail from './Thumbnail'\nimport ActionDropdown from './ActionDropdown'\n\nconst Card = ({ file }: { file: Models.Document }) => {\n    return (\n        <Link href={file.url} target='_blank' className='file-card'>\n            <div className=\"flex flex-row justify-between items-center px-4\">\n                <div className=\"max-w-[70%] overflow-hidden whitespace-nowrap text-ellipsis flex items-center\">\n                    <span className=\"truncate\">{file.name.replace(/\\.[^/.]+$/, '')}</span>\n                    <span className=\"flex-shrink-0\">{'.' + file.name.split('.').pop()}</span>\n                </div>\n                <ActionDropdown file={file} />\n            </div>\n            <div className='flex items-center justify-center bg-white h-[150px] rounded-xl'>\n                <div className=\"w-full h-full object-contain flex items-center justify-center\">\n                    <Thumbnail\n                        type={file.type}\n                        extension={file.extension}\n                        url={file.url}\n                        className='select-none bg-transparent'\n                        imageClassName='max-h-[150px] max-w-full object-contain rounded-xl'\n                    />\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default Card"],"names":[],"mappings":";;;;AAAA;AAGA;AACA;;;;;AAEA,MAAM,OAAO,CAAC,EAAE,IAAI,EAA6B;IAC7C,qBACI,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,KAAK,GAAG;QAAE,QAAO;QAAS,WAAU;;0BAC5C,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAK,WAAU;0CAAY,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa;;;;;;0CAC3D,8OAAC;gCAAK,WAAU;0CAAiB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;;;;;;;;;;;;kCAEnE,8OAAC,6HAAA,CAAA,UAAc;wBAAC,MAAM;;;;;;;;;;;;0BAE1B,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,wHAAA,CAAA,UAAS;wBACN,MAAM,KAAK,IAAI;wBACf,WAAW,KAAK,SAAS;wBACzB,KAAK,KAAK,GAAG;wBACb,WAAU;wBACV,gBAAe;;;;;;;;;;;;;;;;;;;;;;AAMvC;uCAEe","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/Sort.tsx"],"sourcesContent":["import React from 'react'\n\nconst Sort = () => {\n  return (\n    <div>Sort</div>\n  )\n}\n\nexport default Sort"],"names":[],"mappings":";;;;;AAEA,MAAM,OAAO;IACX,qBACE,8OAAC;kBAAI;;;;;;AAET;uCAEe","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/app/%28root%29/%5Btype%5D/FilePage.tsx"],"sourcesContent":["\"use clienyt\"\nimport React, { useEffect, useState } from 'react';\nimport Card from '@/components/Card';\nimport Sort from '@/components/Sort';\nimport { getFiles } from '@/lib/actions/file.actions';\nimport { getFileTypesParams } from '@/lib/utils';\nimport { Models } from 'node-appwrite';\n\nconst FilePage = ({ params }: SearchParamProps ) => {\n  const [files, setFiles] = useState<Models.DocumentList<Models.Document> | null>(null);\n  const type = params?.type || '';\n  const types = getFileTypesParams(type) as FileType[];\n\n  useEffect(() => {\n    const fetchFiles = async () => {\n      const result = await getFiles({ types });\n      setFiles(result);\n    };\n    fetchFiles();\n  }, [type]);\n\n  return (\n    <div className='page-container'>\n      <section className=\"w-full\">\n        <h1 className=\"h1 capitalize\">{type}</h1>\n        <div className='total-size-section'>\n          <p className='body-1'>\n            Total: <span className='h5'>{\"0 MB\"}</span>\n          </p>\n          <div className='sort-container'>\n            <p className='body-1 hidden sm:block text-light-200'>Sort By:</p>\n            <Sort />\n          </div>\n        </div>\n      </section>\n      {files ? (\n        files.total > 0 ? (\n          <section className='file-list'>\n            {files.documents.map((file) => (\n              <Card key={file.$id} file={file} />\n            ))}\n          </section>\n        ) : (\n          <p className='empty-list'>No file uploaded</p>\n        )\n      ) : (\n        <p className='loading'>Loading files...</p>\n      )}\n    </div>\n  );\n};\n\nexport default FilePage;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;AAQA,MAAM,WAAW,CAAC,EAAE,MAAM,EAAoB;IAC5C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA+C;IAChF,MAAM,OAAO,QAAQ,QAAQ;IAC7B,MAAM,QAAQ,CAAA,GAAA,4GAAA,CAAA,qBAAkB,AAAD,EAAE;IAEjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa;YACjB,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,WAAQ,AAAD,EAAE;gBAAE;YAAM;YACtC,SAAS;QACX;QACA;IACF,GAAG;QAAC;KAAK;IAET,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAiB;;;;;;kCAC/B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;;oCAAS;kDACb,8OAAC;wCAAK,WAAU;kDAAM;;;;;;;;;;;;0CAE/B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAwC;;;;;;kDACrD,8OAAC,mHAAA,CAAA,UAAI;;;;;;;;;;;;;;;;;;;;;;;YAIV,QACC,MAAM,KAAK,GAAG,kBACZ,8OAAC;gBAAQ,WAAU;0BAChB,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC,qBACpB,8OAAC,mHAAA,CAAA,UAAI;wBAAgB,MAAM;uBAAhB,KAAK,GAAG;;;;;;;;;qCAIvB,8OAAC;gBAAE,WAAU;0BAAa;;;;;qCAG5B,8OAAC;gBAAE,WAAU;0BAAU;;;;;;;;;;;;AAI/B;uCAEe","debugId":null}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/app/%28root%29/%5Btype%5D/page.tsx"],"sourcesContent":["import React from 'react';\nimport FilePage from './FilePage';\n\nexport default function PageWrapper() {\n  return <FilePage />;\n}"],"names":[],"mappings":";;;;AACA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,wIAAA,CAAA,UAAQ;;;;;AAClB","debugId":null}}]
}