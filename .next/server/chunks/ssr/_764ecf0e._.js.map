{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-neutral-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-neutral-800 dark:bg-neutral-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-neutral-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-neutral-100 data-[state=open]:text-neutral-500 dark:ring-offset-neutral-950 dark:focus:ring-neutral-300 dark:data-[state=open]:bg-neutral-800 dark:data-[state=open]:text-neutral-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-neutral-500 dark:text-neutral-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yjBACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-neutral-100 data-[state=open]:bg-neutral-100 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus:bg-neutral-800 dark:data-[state=open]:bg-neutral-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-neutral-200 bg-white p-1 text-neutral-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin] dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border border-neutral-200 bg-white p-1 text-neutral-950 shadow-md dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-neutral-100 focus:text-neutral-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-neutral-100 focus:text-neutral-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-neutral-100 focus:text-neutral-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-neutral-100 dark:bg-neutral-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/lib/actions/file.actions.ts"],"sourcesContent":["\"use server\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n}\n\nexport const uploadFile = async ({ file, ownerId, accountId, path }: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n        const bucketFile = await storage.createFile(appwriteConfig.bucketId, ID.unique(), inputFile);\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId,\n            users: [],\n            bucketFileId: bucketFile.$id\n        }\n        const newFile = await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            ID.unique(),\n            fileDocument,\n        ).catch(async (error: unknown) => {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFile.$id);\n            handleError(error, \"Failed to create an file document\")\n        });\n\n        revalidatePath(path);\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file\");\n    }\n}\n\nconst createQueries = (currentUser: Models.Document, types: string[], searchText: string, sort: string, limit?: number) => {\n    const queries = [\n        Query.or([\n            Query.equal('owner', [currentUser.$id]),\n            Query.contains('users', [currentUser.email])\n        ])\n    ];\n\n    if (types.length > 0) queries.push(Query.equal('type', types));\n    if (searchText) queries.push(Query.contains('name', searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split('-');\n        queries.push(orderBy === 'asc' ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy));\n    }\n\n    return queries;\n}\n\nexport const getFiles = async ({ types = [], searchText = '', sort = '$createdAt-desc', limit }: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n        if (!currentUser) {\n            throw new Error(\"User not found\");\n        }\n\n        const queries = createQueries(currentUser, types, searchText, sort, limit);\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            queries,\n        );\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n}\n\nexport const renameFile = async ({ fileId, name, extension, path }: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const newName = `${name}.${extension}`;\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename the file\");\n    }\n}\n\nexport const updatedFileUsers = async ({ fileId, emails, path }: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                users: emails\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to update the file users\");\n    }\n}\n\nexport const deleteFile = async ({ fileId, bucketFileId, path }: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify(deletedFile);\n    } catch (error) {\n        handleError(error, \"Failed to delete the file\");\n    }\n}\n\nexport async function getTotalSpaceUsed() {\n    try {\n      const { databases } = await createSessionClient();\n      const currentUser = await getCurrentUser();\n      if (!currentUser) throw new Error(\"User is not authenticated.\");\n  \n      const files = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.fileCollectionId,\n        [Query.equal(\"owner\", [currentUser.$id])],\n      );\n  \n      const totalSpace = {\n        image: { size: 0, latestDate: \"\" },\n        document: { size: 0, latestDate: \"\" },\n        video: { size: 0, latestDate: \"\" },\n        audio: { size: 0, latestDate: \"\" },\n        other: { size: 0, latestDate: \"\" },\n        used: 0,\n        all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n      };\n  \n      files.documents.forEach((file) => {\n        const fileType = file.type as FileType;\n        totalSpace[fileType].size += file.size;\n        totalSpace.used += file.size;\n  \n        if (\n          !totalSpace[fileType].latestDate ||\n          new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n        ) {\n          totalSpace[fileType].latestDate = file.$updatedAt;\n        }\n      });\n  \n      return parseStringify(totalSpace);\n    } catch (error) {\n      handleError(error, \"Error calculating total space used:, \");\n    }\n  }"],"names":[],"mappings":";;;;;;IA6Ha,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/lib/actions/file.actions.ts"],"sourcesContent":["\"use server\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n}\n\nexport const uploadFile = async ({ file, ownerId, accountId, path }: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n        const bucketFile = await storage.createFile(appwriteConfig.bucketId, ID.unique(), inputFile);\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId,\n            users: [],\n            bucketFileId: bucketFile.$id\n        }\n        const newFile = await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            ID.unique(),\n            fileDocument,\n        ).catch(async (error: unknown) => {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFile.$id);\n            handleError(error, \"Failed to create an file document\")\n        });\n\n        revalidatePath(path);\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file\");\n    }\n}\n\nconst createQueries = (currentUser: Models.Document, types: string[], searchText: string, sort: string, limit?: number) => {\n    const queries = [\n        Query.or([\n            Query.equal('owner', [currentUser.$id]),\n            Query.contains('users', [currentUser.email])\n        ])\n    ];\n\n    if (types.length > 0) queries.push(Query.equal('type', types));\n    if (searchText) queries.push(Query.contains('name', searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split('-');\n        queries.push(orderBy === 'asc' ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy));\n    }\n\n    return queries;\n}\n\nexport const getFiles = async ({ types = [], searchText = '', sort = '$createdAt-desc', limit }: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n        if (!currentUser) {\n            throw new Error(\"User not found\");\n        }\n\n        const queries = createQueries(currentUser, types, searchText, sort, limit);\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            queries,\n        );\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n}\n\nexport const renameFile = async ({ fileId, name, extension, path }: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const newName = `${name}.${extension}`;\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename the file\");\n    }\n}\n\nexport const updatedFileUsers = async ({ fileId, emails, path }: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                users: emails\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to update the file users\");\n    }\n}\n\nexport const deleteFile = async ({ fileId, bucketFileId, path }: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify(deletedFile);\n    } catch (error) {\n        handleError(error, \"Failed to delete the file\");\n    }\n}\n\nexport async function getTotalSpaceUsed() {\n    try {\n      const { databases } = await createSessionClient();\n      const currentUser = await getCurrentUser();\n      if (!currentUser) throw new Error(\"User is not authenticated.\");\n  \n      const files = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.fileCollectionId,\n        [Query.equal(\"owner\", [currentUser.$id])],\n      );\n  \n      const totalSpace = {\n        image: { size: 0, latestDate: \"\" },\n        document: { size: 0, latestDate: \"\" },\n        video: { size: 0, latestDate: \"\" },\n        audio: { size: 0, latestDate: \"\" },\n        other: { size: 0, latestDate: \"\" },\n        used: 0,\n        all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n      };\n  \n      files.documents.forEach((file) => {\n        const fileType = file.type as FileType;\n        totalSpace[fileType].size += file.size;\n        totalSpace.used += file.size;\n  \n        if (\n          !totalSpace[fileType].latestDate ||\n          new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n        ) {\n          totalSpace[fileType].latestDate = file.$updatedAt;\n        }\n      });\n  \n      return parseStringify(totalSpace);\n    } catch (error) {\n      handleError(error, \"Error calculating total space used:, \");\n    }\n  }"],"names":[],"mappings":";;;;;;IAwFa,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/lib/actions/file.actions.ts"],"sourcesContent":["\"use server\";\nimport { createAdminClient, createSessionClient } from \"../appwrite\";\nimport { InputFile } from \"node-appwrite/file\";\nimport { appwriteConfig } from \"../appwrite/config\";\nimport { ID, Models, Query } from \"node-appwrite\";\nimport { constructFileUrl, getFileType, parseStringify } from \"../utils\";\nimport { revalidatePath } from \"next/cache\";\nimport { getCurrentUser } from \"./user.actions\";\n\nconst handleError = (error: unknown, message: string) => {\n    console.log(error, message);\n    throw error;\n}\n\nexport const uploadFile = async ({ file, ownerId, accountId, path }: UploadFileProps) => {\n    const { storage, databases } = await createAdminClient();\n    try {\n        const inputFile = InputFile.fromBuffer(file, file.name);\n        const bucketFile = await storage.createFile(appwriteConfig.bucketId, ID.unique(), inputFile);\n        const fileDocument = {\n            type: getFileType(bucketFile.name).type,\n            name: bucketFile.name,\n            url: constructFileUrl(bucketFile.$id),\n            extension: getFileType(bucketFile.name).extension,\n            size: bucketFile.sizeOriginal,\n            owner: ownerId,\n            accountId,\n            users: [],\n            bucketFileId: bucketFile.$id\n        }\n        const newFile = await databases.createDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            ID.unique(),\n            fileDocument,\n        ).catch(async (error: unknown) => {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFile.$id);\n            handleError(error, \"Failed to create an file document\")\n        });\n\n        revalidatePath(path);\n        return parseStringify(newFile);\n    } catch (error) {\n        handleError(error, \"Failed to upload file\");\n    }\n}\n\nconst createQueries = (currentUser: Models.Document, types: string[], searchText: string, sort: string, limit?: number) => {\n    const queries = [\n        Query.or([\n            Query.equal('owner', [currentUser.$id]),\n            Query.contains('users', [currentUser.email])\n        ])\n    ];\n\n    if (types.length > 0) queries.push(Query.equal('type', types));\n    if (searchText) queries.push(Query.contains('name', searchText));\n    if (limit) queries.push(Query.limit(limit));\n\n    if (sort) {\n        const [sortBy, orderBy] = sort.split('-');\n        queries.push(orderBy === 'asc' ? Query.orderAsc(sortBy) : Query.orderDesc(sortBy));\n    }\n\n    return queries;\n}\n\nexport const getFiles = async ({ types = [], searchText = '', sort = '$createdAt-desc', limit }: GetFilesProps) => {\n    const { databases } = await createAdminClient();\n\n    try {\n        const currentUser = await getCurrentUser();\n        if (!currentUser) {\n            throw new Error(\"User not found\");\n        }\n\n        const queries = createQueries(currentUser, types, searchText, sort, limit);\n        const files = await databases.listDocuments(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            queries,\n        );\n        return parseStringify(files);\n    } catch (error) {\n        handleError(error, \"Failed to get files\");\n    }\n}\n\nexport const renameFile = async ({ fileId, name, extension, path }: RenameFileProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const newName = `${name}.${extension}`;\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                name: newName,\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to rename the file\");\n    }\n}\n\nexport const updatedFileUsers = async ({ fileId, emails, path }: UpdateFileUsersProps) => {\n    const { databases } = await createAdminClient();\n    try {\n        const updatedFile = await databases.updateDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId,\n            {\n                users: emails\n            }\n        );\n        revalidatePath(path);\n        return parseStringify(updatedFile);\n    } catch (error) {\n        handleError(error, \"Failed to update the file users\");\n    }\n}\n\nexport const deleteFile = async ({ fileId, bucketFileId, path }: DeleteFileProps) => {\n    const { databases, storage } = await createAdminClient();\n    try {\n        const deletedFile = await databases.deleteDocument(\n            appwriteConfig.databaseId,\n            appwriteConfig.fileCollectionId,\n            fileId\n        );\n\n        if (deletedFile) {\n            await storage.deleteFile(appwriteConfig.bucketId, bucketFileId);\n        }\n\n        revalidatePath(path);\n        return parseStringify(deletedFile);\n    } catch (error) {\n        handleError(error, \"Failed to delete the file\");\n    }\n}\n\nexport async function getTotalSpaceUsed() {\n    try {\n      const { databases } = await createSessionClient();\n      const currentUser = await getCurrentUser();\n      if (!currentUser) throw new Error(\"User is not authenticated.\");\n  \n      const files = await databases.listDocuments(\n        appwriteConfig.databaseId,\n        appwriteConfig.fileCollectionId,\n        [Query.equal(\"owner\", [currentUser.$id])],\n      );\n  \n      const totalSpace = {\n        image: { size: 0, latestDate: \"\" },\n        document: { size: 0, latestDate: \"\" },\n        video: { size: 0, latestDate: \"\" },\n        audio: { size: 0, latestDate: \"\" },\n        other: { size: 0, latestDate: \"\" },\n        used: 0,\n        all: 2 * 1024 * 1024 * 1024 /* 2GB available bucket storage */,\n      };\n  \n      files.documents.forEach((file) => {\n        const fileType = file.type as FileType;\n        totalSpace[fileType].size += file.size;\n        totalSpace.used += file.size;\n  \n        if (\n          !totalSpace[fileType].latestDate ||\n          new Date(file.$updatedAt) > new Date(totalSpace[fileType].latestDate)\n        ) {\n          totalSpace[fileType].latestDate = file.$updatedAt;\n        }\n      });\n  \n      return parseStringify(totalSpace);\n    } catch (error) {\n      handleError(error, \"Error calculating total space used:, \");\n    }\n  }"],"names":[],"mappings":";;;;;;IA2Ga,mBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/ActionsModalContent.tsx"],"sourcesContent":["import { Models } from 'node-appwrite'\nimport React from 'react'\nimport { convertFileSize, formatDateTime } from '@/lib/utils';\nimport { Input } from './ui/input';\nimport { Button } from './ui/button';\nimport Image from 'next/image';\nimport UploadingThumbnail from './UploadingThumbnail';\n\nconst ImageThumbnail = ({ file }: { file: Models.Document }) => (\n    <div className='file-details-thumbnail'>\n        <UploadingThumbnail type={file.type} extension={file.extension} url={file.url} className='shadow-md  border border-black' />\n        <span className=\"subtitle-2 line-clamp-1\">{file.name}</span>\n        \n    </div>\n)\n\nconst DetailRow = ({ label, value }: { label: string, value: string }) => (\n    <div className=\"flex\">\n        <p className='file-details-label text-left'>{label}</p>\n        <p className='file-details-value text-left'>{value}</p>\n    </div>\n)\n\nexport const FileDetails = ({ file }: { file: Models.Document }) => {\n    return (\n        <>\n            <ImageThumbnail file={file} />\n            <div className='space-y-4 px-2 pt-2 '>\n                <DetailRow label=\"Format: \" value={file.extension} />\n                <DetailRow label=\"Size: \" value={convertFileSize(file.size)} />\n                <DetailRow label=\"Owner: \" value={file.owner.fullName} />\n                <DetailRow label=\"Last edit: \" value={formatDateTime(file.$updatedAt)} />\n            </div>\n        </>\n    )\n}\n\ninterface Props {\n    file: Models.Document,\n    onInputChange: React.Dispatch<React.SetStateAction<string[]>>,\n    onRemove: (email: string) => void,\n    isLoading: boolean\n}\n\nexport const ShareInput = ({ file, onInputChange, onRemove, isLoading }: Props) => {\n\n    return (\n        <>\n            <ImageThumbnail file={file} />\n            <div className='share-wrapper'>\n                <p className='subtitle-2 pl-1 text-light-100'>Share file with other users</p>\n            </div>\n            <Input\n                type='email'\n                placeholder='Enter email id'\n                onChange={e => onInputChange(e.target.value.trim().split(','))}\n                className='share-input-field'\n            />\n            <div className='pt-4'>\n                <div className='flex justify-between'>\n                    <p className='subtitle-2 text-light-100'>Share with</p>\n                    <p className='subtitle-2 text-light-200'>{file.users.length} users</p>\n                </div>\n                <ul className='pt-2'>\n                    {file.users.map((email: string) => (\n                        <li className='flex items-center justify-between gap-2' key={email}>\n                            <p className='subtitle-2'>{email}</p>\n                            {!isLoading && (\n                                <Button onClick={() => onRemove(email)} className='share-remove-user' disabled={isLoading}>\n                                    <Image src=\"/assets/icons/remove.svg\" alt=\"remove\" width={24} height={24} className='remove-icon' />\n                                </Button>\n                            )}\n                            {isLoading && (\n                                <Button className='bg-brand'>\n                                    <Image src=\"/assets/icons/loader.svg\" alt=\"remove\" width={28} height={28} className='animate-spin' />\n                                </Button>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n        </>\n    )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAA6B,iBACvD,8OAAC;QAAI,WAAU;;0BACX,8OAAC,iIAAA,CAAA,UAAkB;gBAAC,MAAM,KAAK,IAAI;gBAAE,WAAW,KAAK,SAAS;gBAAE,KAAK,KAAK,GAAG;gBAAE,WAAU;;;;;;0BACzF,8OAAC;gBAAK,WAAU;0BAA2B,KAAK,IAAI;;;;;;;;;;;;AAK5D,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,KAAK,EAAoC,iBACjE,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAE,WAAU;0BAAgC;;;;;;0BAC7C,8OAAC;gBAAE,WAAU;0BAAgC;;;;;;;;;;;;AAI9C,MAAM,cAAc,CAAC,EAAE,IAAI,EAA6B;IAC3D,qBACI;;0BACI,8OAAC;gBAAe,MAAM;;;;;;0BACtB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAU,OAAM;wBAAW,OAAO,KAAK,SAAS;;;;;;kCACjD,8OAAC;wBAAU,OAAM;wBAAS,OAAO,CAAA,GAAA,4GAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,IAAI;;;;;;kCAC1D,8OAAC;wBAAU,OAAM;wBAAU,OAAO,KAAK,KAAK,CAAC,QAAQ;;;;;;kCACrD,8OAAC;wBAAU,OAAM;wBAAc,OAAO,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,UAAU;;;;;;;;;;;;;;AAIpF;AASO,MAAM,aAAa,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAS;IAE1E,qBACI;;0BACI,8OAAC;gBAAe,MAAM;;;;;;0BACtB,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAE,WAAU;8BAAiC;;;;;;;;;;;0BAElD,8OAAC,0HAAA,CAAA,QAAK;gBACF,MAAK;gBACL,aAAY;gBACZ,UAAU,CAAA,IAAK,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;gBACzD,WAAU;;;;;;0BAEd,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAE,WAAU;0CAA4B;;;;;;0CACzC,8OAAC;gCAAE,WAAU;;oCAA6B,KAAK,KAAK,CAAC,MAAM;oCAAC;;;;;;;;;;;;;kCAEhE,8OAAC;wBAAG,WAAU;kCACT,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,sBACb,8OAAC;gCAAG,WAAU;;kDACV,8OAAC;wCAAE,WAAU;kDAAc;;;;;;oCAC1B,CAAC,2BACE,8OAAC,2HAAA,CAAA,SAAM;wCAAC,SAAS,IAAM,SAAS;wCAAQ,WAAU;wCAAoB,UAAU;kDAC5E,cAAA,8OAAC,6HAAA,CAAA,UAAK;4CAAC,KAAI;4CAA2B,KAAI;4CAAS,OAAO;4CAAI,QAAQ;4CAAI,WAAU;;;;;;;;;;;oCAG3F,2BACG,8OAAC,2HAAA,CAAA,SAAM;wCAAC,WAAU;kDACd,cAAA,8OAAC,6HAAA,CAAA,UAAK;4CAAC,KAAI;4CAA2B,KAAI;4CAAS,OAAO;4CAAI,QAAQ;4CAAI,WAAU;;;;;;;;;;;;+BATnC;;;;;;;;;;;;;;;;;;AAmBrF","debugId":null}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/ActionDropdown.tsx"],"sourcesContent":["\"use client\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle,\n} from \"@/components/ui/dialog\"\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { actionsDropdownItems } from \"@/constants\";\nimport { constructDownloadUrl } from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { Models } from \"node-appwrite\";\nimport { useState } from \"react\";\nimport { Input } from \"./ui/input\";\nimport { Button } from \"./ui/button\";\nimport { deleteFile, renameFile, updatedFileUsers } from \"@/lib/actions/file.actions\";\nimport { usePathname } from \"next/navigation\";\nimport { FileDetails, ShareInput } from \"./ActionsModalContent\";\nimport { Separator } from \"./ui/separator\";\n\nconst ActionDropdown = ({ file }: { file: Models.Document }) => {\n    const [isModelOpen, setIsModelOpen] = useState(false);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [action, setAction] = useState<ActionType | null>(null);\n    const [name, setName] = useState(file.name);\n    const [isLoading, setIsLoading] = useState(false);\n    const path = usePathname();\n    const [emails, setEmails] = useState<string[]>([]);\n    const [loadingTrue, setloadingTrue] = useState(false);\n\n    const closeAllModels = () => {\n        setIsModelOpen(false);\n        setIsDropdownOpen(false);\n        setAction(null);\n        setName(file.name);\n        //setEmail([]);\n    };\n\n    const handleAction = async () => {\n        if (!action) return;\n        setIsLoading(true);\n        let success = false;\n\n        const actions = {\n            rename: () => renameFile({ fileId: file.$id, name, extension: file.extension, path }),\n            share: () => updatedFileUsers({ fileId: file.$id, emails, path }),\n            delete: () => deleteFile({ fileId: file.$id, path, bucketFileId: file.bucketFileId })\n        };\n\n        success = await actions[action.value as keyof typeof actions]();\n        if (success) {\n            closeAllModels();\n            setIsLoading(false);\n        };\n    }\n\n    const handleRemoveUser = async (email: string) => {\n        setloadingTrue(true)\n        const updatedEmails = emails.filter((e) => e !== email);\n        const success = await updatedFileUsers({\n            fileId: file.$id,\n            emails: updatedEmails,\n            path,\n        });\n        if (success) setEmails(updatedEmails);\n        setloadingTrue(false);\n    }\n\n    const renderDialogContent = () => {\n        if (!action) return null;\n        const { value, label } = action;\n\n        return (\n            <DialogContent className=\"shad-dialog button\">\n                <DialogHeader className=\"flex flex-col gap-3\">\n                    <DialogTitle className=\"text-center text-light-100\">{label}</DialogTitle>\n                    {value === \"rename\" && (\n                        <Input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n                    )}\n                    {value === \"details\" && (\n                        <FileDetails file={file} />\n                    )}\n                    {value === \"share\" && (\n                        <ShareInput file={file} onInputChange={setEmails} onRemove={handleRemoveUser} isLoading={loadingTrue} />\n                    )}\n                    {value === \"delete\" && (\n                        <p className=\"delete-confirmation\">\n                            Are you sure you want to delete {' '}\n                            <span className=\"delete-file-name\">{file.name}?</span>\n                        </p>\n                    )}\n                </DialogHeader>\n                {['rename', 'delete', 'share'].includes(value) && (\n                    <DialogFooter className=\"flex flex-col gap-3 md:flex-row\">\n                        <Button onClick={closeAllModels} className=\"cancel-button\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleAction} className=\"submit-button\">\n                            <p className=\"capitalize\">{value}</p>\n                            {isLoading && (\n                                <Image src=\"/assets/icons/loader.svg\" alt=\"loader\" width={24} height={24} className=\"animate-spin\" />\n                            )}\n                        </Button>\n                    </DialogFooter>\n                )}\n            </DialogContent>\n        )\n    }\n\n    return (\n        <Dialog open={isModelOpen} onOpenChange={setIsModelOpen}>\n            <DropdownMenu open={isDropdownOpen} onOpenChange={setIsDropdownOpen}>\n                <DropdownMenuTrigger className=\"shad-no-focus\">\n                    <Image src=\"/assets/icons/dots.svg\" alt=\"dots\" width={34} height={34} className=\"hover:bg-light-200/30 rounded-[8px] p-1\" />\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"w-[260px] px-0 py-3 absolute left-[-230]\">\n                    {actionsDropdownItems.map((actionItem) => {\n                        const isOpen = actionItem.value === \"open\";\n                        const isRename = actionItem.value === \"rename\";\n                        const isInfo = actionItem.value === \"details\";\n\n                        return (\n                            <div key={actionItem.value}>\n                                <DropdownMenuItem\n                                    className=\"p-2 px-1 rounded-[0]\"\n                                    onClick={() => {\n                                        setAction(actionItem);\n                                        if (['rename', 'share', 'delete', 'details'].includes(actionItem.value)) {\n                                            setIsModelOpen(true);\n                                        }\n                                    }}\n                                >\n                                    \n                                    {actionItem.value === \"download\" ? (\n                                        <Link\n                                            href={constructDownloadUrl(file.bucketFileId)}\n                                            download={file.name}\n                                            className=\"flex items-center gap-2 cursor-pointer\"\n                                        >\n                                            <Image src={actionItem.icon} alt={actionItem.label} width={20} height={20} className=\"ml-2.5\" />\n                                            <span className=\"text-black font-normal px-2\">{actionItem.label}</span>\n                                        </Link>\n                                    ) : isOpen ? (\n                                        <div className=\"w-full flex items-center justify-between cursor-pointer\">\n                                            <div className=\"flex items-center gap-2\">\n                                                <Image src={actionItem.icon} alt={actionItem.label} width={20} height={20} className=\"ml-2.5\" />\n                                                <span className=\"text-black font-normal px-2\">{actionItem.label}</span>\n                                            </div>\n                                        </div>\n                                    ) : (\n                                        <div className=\"flex items-center gap-2 cursor-pointer\">\n                                            <Image src={actionItem.icon} alt={actionItem.label} width={20} height={20} className=\"ml-2.5\" />\n                                            <span className=\"text-black font-normal px-2\">{actionItem.label}</span>\n                                        </div>\n                                    )}\n                                </DropdownMenuItem>\n                                {isOpen && <DropdownMenuSeparator className=\"bg-gray-300\" />}\n                                {isInfo && <DropdownMenuSeparator className=\"bg-gray-300\" />}\n                                {isRename && <DropdownMenuSeparator className=\"bg-gray-300\" />}\n                            </div>\n                        );\n                    })}\n                </DropdownMenuContent>\n            </DropdownMenu>\n            {renderDialogContent()}\n        </Dialog>\n    )\n}\n\nexport default ActionDropdown"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1055, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/Card.tsx"],"sourcesContent":["import React from 'react'\nimport Thumbnail from './Thumbnail'\nimport ActionDropdown from './ActionDropdown'\nimport { Models } from 'node-appwrite'\n\nconst Card = ({ file, onPreview }: { file: Models.Document, onPreview: (file: Models.Document) => void }) => {\n    return (\n        <div className='file-card cursor-pointer' onClick={() => onPreview(file)}>\n            <div className=\"flex flex-row justify-between items-center px-4\">\n                <div className=\"max-w-[70%] overflow-hidden whitespace-nowrap text-ellipsis flex items-center\">\n                    <span className=\"truncate\">{file.name.replace(/\\.[^/.]+$/, '')}</span>\n                    <span className=\"flex-shrink-0\">{'.' + file.name.split('.').pop()}</span>\n                </div>\n                <ActionDropdown file={file} />\n            </div>\n            <div className='flex items-center justify-center bg-white h-[150px] rounded-x text-blue'>\n                <div className=\"w-full h-full object-contain flex items-center justify-center\">\n                    <Thumbnail\n                        type={file.type}\n                        extension={file.extension}\n                        url={file.url}\n                        className='select-none bg-transparent'\n                        imageClassName='max-h-[150px] max-w-full object-contain rounded-xl'\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAGA,MAAM,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,EAAyE;IACpG,qBACI,8OAAC;QAAI,WAAU;QAA2B,SAAS,IAAM,UAAU;;0BAC/D,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAK,WAAU;0CAAY,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa;;;;;;0CAC3D,8OAAC;gCAAK,WAAU;0CAAiB,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;;;;;;;;;;;;kCAEnE,8OAAC,6HAAA,CAAA,UAAc;wBAAC,MAAM;;;;;;;;;;;;0BAE1B,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,wHAAA,CAAA,UAAS;wBACN,MAAM,KAAK,IAAI;wBACf,WAAW,KAAK,SAAS;wBACzB,KAAK,KAAK,GAAG;wBACb,WAAU;wBACV,gBAAe;;;;;;;;;;;;;;;;;;;;;;AAMvC;uCAEe","debugId":null}},
    {"offset": {"line": 1149, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/FilePreviewModal.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Models } from 'node-appwrite'\nimport { X } from 'lucide-react'\n\ninterface FilePreviewModalProps {\n  file: Models.Document\n  onClose: () => void\n}\n\nconst FilePreviewModal = ({ file, onClose }: FilePreviewModalProps) => {\n  const mimeType = file.mimeType || ''\n  const isImage = mimeType.startsWith('image')\n  const isPDF = mimeType === 'application/pdf'\n  const isVideo = mimeType.startsWith('video')\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60 px-4\">\n      <div className=\"relative bg-white rounded-2xl shadow-xl w-full max-w-4xl max-h-[90vh] overflow-hidden\">\n        {/* Close Button */}\n        <button\n          onClick={onClose}\n          className=\"absolute top-3 right-3 text-gray-500 hover:text-black transition\"\n        >\n          <X className=\"w-6 h-6\" />\n        </button>\n\n        {/* Header */}\n        <div className=\"px-6 pt-6 pb-2 border-b\">\n          <h2 className=\"text-lg font-semibold truncate\">{file.name}</h2>\n        </div>\n\n        {/* Preview Area */}\n        <div className=\"p-4 overflow-auto h-[70vh] flex items-center justify-center bg-gray-50\">\n          {isImage ? (\n            <img\n              src={file.url}\n              alt={file.name}\n              className=\"max-h-[65vh] max-w-full rounded-xl shadow\"\n            />\n          ) : isPDF ? (\n            <iframe\n              src={file.url}\n              className=\"w-full h-full rounded-lg border\"\n              title=\"PDF Preview\"\n            />\n          ) : isVideo ? (\n            <video\n              src={file.url}\n              controls\n              className=\"w-full max-h-[65vh] rounded-xl shadow\"\n            />\n          ) : (\n            <p className=\"text-gray-500\">No preview available for this file type.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FilePreviewModal\n"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAWA,MAAM,mBAAmB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAyB;IAChE,MAAM,WAAW,KAAK,QAAQ,IAAI;IAClC,MAAM,UAAU,SAAS,UAAU,CAAC;IACpC,MAAM,QAAQ,aAAa;IAC3B,MAAM,UAAU,SAAS,UAAU,CAAC;IAEpC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBACC,SAAS;oBACT,WAAU;8BAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;wBAAC,WAAU;;;;;;;;;;;8BAIf,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAG,WAAU;kCAAkC,KAAK,IAAI;;;;;;;;;;;8BAI3D,8OAAC;oBAAI,WAAU;8BACZ,wBACC,8OAAC;wBACC,KAAK,KAAK,GAAG;wBACb,KAAK,KAAK,IAAI;wBACd,WAAU;;;;;+BAEV,sBACF,8OAAC;wBACC,KAAK,KAAK,GAAG;wBACb,WAAU;wBACV,OAAM;;;;;+BAEN,wBACF,8OAAC;wBACC,KAAK,KAAK,GAAG;wBACb,QAAQ;wBACR,WAAU;;;;;6CAGZ,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;;;;;;AAMzC;uCAEe","debugId":null}},
    {"offset": {"line": 1255, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/FileExplorer.tsx"],"sourcesContent":["\"use client\";\nimport { Models } from 'node-appwrite'\nimport React, { useState } from 'react'\nimport Card from './Card';\nimport FilePreviewModal from './FilePreviewModal';\n\nconst FileExplorer = ({ files }: { files: Models.Document[] }) => {\n    const [selectedFile, setSelectedFile] = useState<Models.Document | null>(null);\n\n    return (\n        <>\n            <section className='file-list'>\n                {files.map((file) => (\n                    <Card key={file.$id} file={file} onPreview={() => setSelectedFile(file)} />\n                ))}\n            </section>\n\n            {selectedFile && (\n                <FilePreviewModal file={selectedFile} onClose={() => setSelectedFile(null)} />\n            )}\n        </>\n    )\n}\n\nexport default FileExplorer"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,eAAe,CAAC,EAAE,KAAK,EAAgC;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B;IAEzE,qBACI;;0BACI,8OAAC;gBAAQ,WAAU;0BACd,MAAM,GAAG,CAAC,CAAC,qBACR,8OAAC,mHAAA,CAAA,UAAI;wBAAgB,MAAM;wBAAM,WAAW,IAAM,gBAAgB;uBAAvD,KAAK,GAAG;;;;;;;;;;YAI1B,8BACG,8OAAC,+HAAA,CAAA,UAAgB;gBAAC,MAAM;gBAAc,SAAS,IAAM,gBAAgB;;;;;;;;AAIrF;uCAEe","debugId":null}},
    {"offset": {"line": 1304, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-neutral-200 bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-white data-[placeholder]:text-neutral-500 focus:outline-none focus:ring-1 focus:ring-neutral-950 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-neutral-800 dark:ring-offset-neutral-950 dark:data-[placeholder]:text-neutral-400 dark:focus:ring-neutral-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border border-neutral-200 bg-white text-neutral-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin] dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-neutral-100 focus:text-neutral-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-neutral-100 dark:bg-neutral-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1496, "column": 0}, "map": {"version":3,"sources":["file:///Users/tushar/Documents/aspiredrive/components/Sort.tsx"],"sourcesContent":["\"use client\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { sortTypes } from \"@/constants\";\nimport { usePathname, useRouter } from \"next/navigation\";\n\n\n\nconst Sort = () => {\n  const path = usePathname();\n  const router = useRouter();\n  const handleSort = (value: string) => {\n    router.push(`${path}?sort=${value}`);\n  }\n\n  return (\n    <Select onValueChange={handleSort} defaultValue={sortTypes[0].value}>\n      <SelectTrigger className=\"sort-select\">\n        <SelectValue placeholder={sortTypes[0].value} />\n      </SelectTrigger>\n      <SelectContent className=\"sort-select-content\">\n        {sortTypes.map((sort) => (\n          <SelectItem key={sort.label} className=\"shad-select-item\" value={sort.value}>{sort.label}</SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  )\n}\n\nexport default Sort"],"names":[],"mappings":";;;;AACA;AAOA;AACA;AATA;;;;;AAaA,MAAM,OAAO;IACX,MAAM,OAAO,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE,OAAO;IACrC;IAEA,qBACE,8OAAC,2HAAA,CAAA,SAAM;QAAC,eAAe;QAAY,cAAc,kHAAA,CAAA,YAAS,CAAC,EAAE,CAAC,KAAK;;0BACjE,8OAAC,2HAAA,CAAA,gBAAa;gBAAC,WAAU;0BACvB,cAAA,8OAAC,2HAAA,CAAA,cAAW;oBAAC,aAAa,kHAAA,CAAA,YAAS,CAAC,EAAE,CAAC,KAAK;;;;;;;;;;;0BAE9C,8OAAC,2HAAA,CAAA,gBAAa;gBAAC,WAAU;0BACtB,kHAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,qBACd,8OAAC,2HAAA,CAAA,aAAU;wBAAkB,WAAU;wBAAmB,OAAO,KAAK,KAAK;kCAAG,KAAK,KAAK;uBAAvE,KAAK,KAAK;;;;;;;;;;;;;;;;AAKrC;uCAEe","debugId":null}}]
}